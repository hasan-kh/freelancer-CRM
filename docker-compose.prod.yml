services:
  app:
    image: "${CI_REGISTRY_IMAGE}/app:${CI_COMMIT_REF_NAME}"
    command: >
      sh -c "sh ./scripts/wait_for_rabbitmq.sh &&
             sh ./scripts/wait_for_redis.sh &&
             cd core &&
             python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             django-admin compilemessages &&
             gunicorn core.wsgi:application --bind 0.0.0.0:8000 --workers 4 --threads 2 --timeout 120 \
                   --access-logfile - --error-logfile - --capture-output"

    volumes:
      - prod-static-data:/vol/web

  db:
    volumes:
      - prod-db-data:/var/lib/postgresql/data

  celery:
    image: "${CI_REGISTRY_IMAGE}/app:${CI_COMMIT_REF_NAME}"
    deploy:
      replicas: 4

  celery_beat:
    image: "${CI_REGISTRY_IMAGE}/app:${CI_COMMIT_REF_NAME}"

  flower:
    image: "${CI_REGISTRY_IMAGE}/flower:${CI_COMMIT_REF_NAME}"
    ports:
      - "5555:5555"

  proxy:
    image: "${CI_REGISTRY_IMAGE}/proxy:${CI_COMMIT_REF_NAME}"
    build:
      context: ./proxy
    depends_on:
      - app
    ports:
      - 8000:8000
    env_file:
      - ./envs/.env.proxy
    volumes:
      - prod-static-data:/vol/static

volumes:
  prod-static-data:
  prod-db-data:
